#!/usr/bin/env python

import numpy
import struct

dac_gen_i = '''/* Generated by dac.py. */

static float dac_gen_sine[128] = {{ {sine} }};

static const FAR uint16_t dac_gen_pcm1611s[] = {{ {pcm1611s} }};
'''

number_of_samples = 128
sine = []

for i in range(0, number_of_samples):
    x = i * 2 * numpy.pi / number_of_samples
    sine.append(numpy.sin(x))

pcm1611s = []

with open("pcm1611s.wav.b12", "rb") as f:
    while True:
        data = f.read(2)
        if not data:
            break
        pcm1611s.append(struct.unpack("<H", data)[0])

with open("dac_gen.i", "w") as f:
    sine_samples = ', '.join(['%f' % sample
                              for sample in sine])
    pcm1611s_samples = ', '.join(['%d' % sample
                                       for sample in pcm1611s])
    
    f.write(dac_gen_i.format(sine=sine_samples,
                             pcm1611s=pcm1611s_samples))
